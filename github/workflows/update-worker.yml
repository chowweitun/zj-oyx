name: Auto Update Worker

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 1 * * *"  # 每天凌晨 1 点自动运行
  workflow_dispatch:     # 支持手动触发

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 仓库
        uses: actions/checkout@v4

      - name: 获取当前本地版本
        id: local_version
        run: |
          echo -e "\033[34m[获取本地版本]\033[0m"
          LOCAL_VERSION=""
          if [ -f version.txt ]; then
            LOCAL_VERSION=$(<version.txt)
            echo "当前本地版本: $LOCAL_VERSION"
          else
            echo "首次同步，无本地版本。"
          fi
          echo "local_version=$LOCAL_VERSION" >> $GITHUB_OUTPUT

      - name: 获取最新 Release 信息
        id: release_info
        run: |
          echo -e "\033[34m[获取最新 Release]\033[0m"
          API_URL="https://api.github.com/repos/bia-pain-bache/BPB-Worker-Panel/releases"
          RESPONSE=$(curl -s "$API_URL")

          TAG_NAME=$(echo "$RESPONSE" | jq -r '.[0].tag_name // empty')
          DOWNLOAD_URL=$(echo "$RESPONSE" | jq -r '.[0].assets[]? | select(.name == "worker.zip") | .browser_download_url // empty')

          if [[ -z "$TAG_NAME" || -z "$DOWNLOAD_URL" ]]; then
            echo -e "\033[31m未能正确获取最新 Release 信息，退出！\033[0m"
            exit 1
          fi

          echo "最新版本号: $TAG_NAME"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "download_url=$DOWNLOAD_URL" >> $GITHUB_OUTPUT

      - name: 判断是否需要更新
        id: check_update
        run: |
          echo -e "\033[34m[判断是否需要更新]\033[0m"
          if [ "${{ steps.local_version.outputs.local_version }}" = "${{ steps.release_info.outputs.tag_name }}" ]; then
            echo -e "\033[32m已经是最新版本，无需更新。\033[0m"
            echo "update_needed=false" >> $GITHUB_OUTPUT
          else
            echo -e "\033[33m发现新版本，需要更新！\033[0m"
            echo "update_needed=true" >> $GITHUB_OUTPUT
          fi

      - name: 清理旧文件并下载新版本
        if: steps.check_update.outputs.update_needed == 'true'
        run: |
          echo -e "\033[34m[清理旧文件]\033[0m"
          find . -maxdepth 1 ! -name '.' ! -name '.git' ! -name '.github' -exec rm -rf {} +
          echo -e "\033[34m[下载并解压 worker.zip]\033[0m"
          wget -q -O worker.zip "${{ steps.release_info.outputs.download_url }}"
          unzip -q worker.zip
          rm worker.zip
          echo "${{ steps.release_info.outputs.tag_name }}" > version.txt

      - name: 提交更改
        if: steps.check_update.outputs.update_needed == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🔄 自动同步最新 Worker 版本：${{ steps.release_info.outputs.tag_name }}"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          push_options: --force
